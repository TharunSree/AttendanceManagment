# Generated by Django 5.2.3 on 2025-06-16 13:31

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g., '2024-2025'", max_length=100, unique=True)),
                ('start_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2100)])),
                ('end_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2100)])),
                ('is_current', models.BooleanField(default=False, help_text='Mark the currently active academic session.')),
            ],
            options={
                'ordering': ['-start_year'],
            },
        ),
        migrations.CreateModel(
            name='AttendanceSettings',
            fields=[
                ('id', models.PositiveIntegerField(default=1, editable=False, primary_key=True, serialize=False)),
                ('required_percentage', models.PositiveIntegerField(default=75, help_text='Minimum attendance percentage required for students to be eligible.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
            options={
                'verbose_name_plural': 'Attendance Settings',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('course_type', models.CharField(choices=[('UG', 'Undergraduate'), ('PG', 'Postgraduate')], default='UG', max_length=2)),
                ('duration_years', models.PositiveIntegerField(default=3)),
                ('required_hours_per_semester', models.PositiveIntegerField(default=300)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('code', models.CharField(blank=True, help_text='Optional department code', max_length=20, null=True, unique=True)),
                ('head_of_department', models.ForeignKey(blank=True, limit_choices_to={'profile__role': 'faculty'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_departments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StudentGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g., 'BCA Section A'", max_length=100)),
                ('start_year', models.PositiveIntegerField()),
                ('passout_year', models.PositiveIntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_groups', to='academics.course')),
                ('students', models.ManyToManyField(blank=True, limit_choices_to={'profile__role': 'student'}, related_name='student_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('name', 'course')},
            },
        ),
        migrations.CreateModel(
            name='CourseSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_hours', models.PositiveIntegerField(default=40, help_text='Total hours required for this subject in this course.')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.course')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.subject')),
            ],
            options={
                'unique_together': {('course', 'subject')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='courses', to='academics.subject'),
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
            options={
                'ordering': ['start_time'],
                'unique_together': {('start_time', 'end_time')},
            },
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=10)),
                ('faculty', models.ForeignKey(limit_choices_to={'profile__role': 'faculty'}, on_delete=django.db.models.deletion.CASCADE, related_name='timetable_entries', to=settings.AUTH_USER_MODEL)),
                ('student_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetable_entries', to='academics.studentgroup')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetable_entries', to='academics.coursesubject')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetable_entries', to='academics.timeslot')),
            ],
            options={
                'unique_together': {('day_of_week', 'time_slot', 'faculty'), ('day_of_week', 'time_slot', 'student_group')},
            },
        ),
    ]
